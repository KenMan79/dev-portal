(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{244:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return u}));var n=a(2),i=a(6),o=(a(0),a(259)),r=a(263),c=a(264),l={id:"staking-ssn-setup",title:"Setting up the SSN",keywords:["staking","getting started","seed node","launching node","zilliqa"],description:"Setting up the SSN"},s={id:"staking/phase1/ssn-operator/staking-ssn-setup",isDocsHomePage:!1,title:"Setting up the SSN",description:"Setting up the SSN",source:"@site/docs/staking/phase1/ssn-operator/staking-ssn-setup.mdx",permalink:"/docs/staking/phase1/ssn-operator/staking-ssn-setup",editUrl:"https://github.com/Zilliqa/dev-portal/tree/master/docs/staking/phase1/ssn-operator/staking-ssn-setup.mdx",sidebar:"StakingSidebar",previous:{title:"Before You Start",permalink:"/docs/staking/phase1/ssn-operator/staking-ssn-before-you-start"},next:{title:"Enrolment of SSN into Staking Smart Contract",permalink:"/docs/staking/phase1/ssn-operator/staking-ssn-enrollment"}},b=[{value:"Default Port Requirements for SSNs",id:"default-port-requirements-for-ssns",children:[]},{value:"Preparing the Node",id:"preparing-the-node",children:[{value:"Launching the Node Using Docker",id:"launching-the-node-using-docker",children:[]},{value:"Launching the Node Using Native Build",id:"launching-the-node-using-native-build",children:[]},{value:"Configuring Domain Name",id:"configuring-domain-name",children:[]},{value:"SSL/TLS Configuration",id:"ssltls-configuration",children:[]}]},{value:"Whitelisting and API Servicing",id:"whitelisting-and-api-servicing",children:[{value:"Testing Your SSN&#39;s JSON-RPC Port",id:"testing-your-ssns-json-rpc-port",children:[]},{value:"Testing Your SSN&#39;s WebSocket Port",id:"testing-your-ssns-websocket-port",children:[]}]},{value:"Advanced Setup",id:"advanced-setup",children:[]}],d={rightToc:b};function u(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("hr",null),Object(o.b)("h2",{id:"default-port-requirements-for-ssns"},"Default Port Requirements for SSNs"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(o.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Default"),Object(o.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Purpose"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Inbound"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"33133"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Protocol level port for receiving network data")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Inbound"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"4201/443"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(n.a)({parentName:"td"},{href:"https://apidocs.zilliqa.com/#introduction"}),"API service"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Inbound"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"4401"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(n.a)({parentName:"td"},{href:"../../../dev/dev-tools-websockets"}),"WebSocket service"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Inbound"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"4501"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Staking API service")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Outbound"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"443"),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"For getting initial node data for syncing")))),Object(o.b)("h2",{id:"preparing-the-node"},"Preparing the Node"),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Mainnet has been upgraded to support staking phase 1. You can now start to run a staked seed node on mainnet.\nSmart contract enrollment will happen 1-2 days before staking phase 1 launch."))),Object(o.b)("p",null,"Launching a seed node for staking is similar to launching a normal seed node, with some additional configuration steps."),Object(o.b)("p",null,"In this guide, we will walk you through the steps on how to set up the seed node via"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Docker"),Object(o.b)("li",{parentName:"ol"},"Native build")),Object(o.b)("p",null,"You can go for either one of the options below (click to expand)."),Object(o.b)(r.a,{defaultValue:"docker",values:[{label:"Docker",value:"docker"},{label:"Native Build",value:"manual"}],mdxType:"Tabs"},Object(o.b)(c.a,{value:"docker",mdxType:"TabItem"},Object(o.b)("h3",{id:"launching-the-node-using-docker"},"Launching the Node Using Docker"),Object(o.b)("p",null,"We highly recommend using ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://docker.com/"}),"Docker")," to set up a seed node, as we provide a tested, production-ready image for your use. If you have not yet set up Docker, please follow the instructions on the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.docker.com/install/"}),"official documentation"),"."),Object(o.b)("p",null,"Once you have set up Docker, you may proceed to download and uncompress the configuration tarball for the Mainnet:"),Object(o.b)(r.a,{defaultValue:"testnet",values:[{label:"Testnet",value:"testnet"},{label:"Mainnet",value:"mainnet"}],mdxType:"Tabs"},Object(o.b)(c.a,{value:"testnet",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# create a directory\n$ mkdir my_seed && cd my_seed\n\n# download and extract the SSN configuration files\n$ wget https://testnet-join.zilliqa.com/ssn-configuration.tar.gz\n$ tar -zxvf ssn-configuration.tar.gz\n"))),Object(o.b)(c.a,{value:"mainnet",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# create a directory\n$ mkdir my_seed && cd my_seed\n\n# download and extract the SSN configuration files\n$ wget https://mainnet-join.zilliqa.com/ssn-configuration.tar.gz\n$ tar -zxvf ssn-configuration.tar.gz\n")))),Object(o.b)("p",null,"The seed node requires some configuring before it can successfully join the network and be used for staking. Most configuration is contained in ",Object(o.b)("inlineCode",{parentName:"p"},"constants.xml"),", which should be in the directory you extracted ssn-configuration.tar.gz to. Minimally, the following changes are required:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Optional:")," Change the value of ",Object(o.b)("inlineCode",{parentName:"li"},"SEED_PORT")," to ",Object(o.b)("inlineCode",{parentName:"li"},"33133")," (default), or a port of your choice. If you do not select ",Object(o.b)("inlineCode",{parentName:"li"},"33133"),", be sure to note this down for the subsequent whitelisting step.",Object(o.b)("div",Object(n.a)({parentName:"li"},{className:"admonition admonition-caution alert alert--warning"}),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"Important notice ")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"If you have used a port other than 33133, and have opted for IP-based whitelisting, please notify us immediately so that we can adjust our whitelisted port for you.")))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Optional:")," Change the value of ",Object(o.b)("inlineCode",{parentName:"li"},"ENABLE_WEBSOCKET")," to ",Object(o.b)("inlineCode",{parentName:"li"},"true")," if your seed node will support WebSockets (refer to the ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"../../../dev/dev-tools-websockets"}),"Zilliqa Websocket Server")," documentation).")),Object(o.b)("p",null,"Finally, launch the seed node:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"$ ./launch_docker.sh\n")),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"A seed node needs a key pair to communicate with other nodes in the network. launch_docker.sh will automatically generate and use a key pair stored in the file mykey.txt in the same folder."))),Object(o.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"We highly recommend to use another keypair for depositing stake, withdrawing stake and withdrawing reward.")))),Object(o.b)(c.a,{value:"manual",mdxType:"TabItem"},Object(o.b)("h3",{id:"launching-the-node-using-native-build"},"Launching the Node Using Native Build"),Object(o.b)("p",null,"If you cannot or do not wish to use Docker, you may also build the Zilliqa binary from the source and run it as such."),Object(o.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"This approach has only been tested on ",Object(o.b)("inlineCode",{parentName:"p"},"Ubuntu 18.04.5 LTS")," and involves compiling and building the ",Object(o.b)("inlineCode",{parentName:"p"},"C++")," codebase from scratch. We strongly recommend you consider launching the node using the Docker steps detailed in the other tab."))),Object(o.b)("p",null,"First, clone the Zilliqa repository:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# clone Zilliqa source files\n$ git clone https://github.com/Zilliqa/Zilliqa.git && cd Zilliqa && git checkout <<release tag>> && cd Zilliqa\n")),Object(o.b)("p",null,"Install system dependencies:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ sudo apt-get update\n$ sudo apt-get install git libboost-system-dev libboost-filesystem-dev libboost-test-dev libssl-dev libleveldb-dev libjsoncpp-dev libsnappy-dev cmake libmicrohttpd-dev libjsonrpccpp-dev build-essential pkg-config libevent-dev libminiupnpc-dev libcurl4-openssl-dev libboost-program-options-dev libboost-python-dev python3-dev python3-setuptools python3-pip gawk\n")),Object(o.b)("p",null,"Build the staked seed node:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# Build the binary. This may take a while.\n$ ./build.sh\n")),Object(o.b)("p",null,"The build should complete with no errors. Once it is done, download and uncompress the configuration tarball:"),Object(o.b)(r.a,{defaultValue:"testnet",values:[{label:"Testnet",value:"testnet"},{label:"Mainnet",value:"mainnet"}],mdxType:"Tabs"},Object(o.b)(c.a,{value:"testnet",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# create a directory\n$ mkdir my_seed && cd my_seed\n\n# download and extract the SSN configuration files\n$ wget https://testnet-join.zilliqa.com/ssn-configuration.tar.gz\n$ tar -zxvf ssn-configuration.tar.gz\n"))),Object(o.b)(c.a,{value:"mainnet",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# create a directory\n$ mkdir my_seed && cd my_seed\n\n# download and extract the SSN configuration files\n$ wget https://mainnet-join.zilliqa.com/ssn-configuration.tar.gz\n$ tar -zxvf ssn-configuration.tar.gz\n")))),Object(o.b)("p",null,"The staked seed node requires some configuring before it can successfully join the network and be used for staking. Most configuration is contained in ",Object(o.b)("inlineCode",{parentName:"p"},"constants.xml"),", which should be in the directory you extracted ",Object(o.b)("inlineCode",{parentName:"p"},"ssn-configuration.tar.gz")," to. Minimally, the following changes are required:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Optional:")," Change the value of ",Object(o.b)("inlineCode",{parentName:"li"},"SEED_PORT")," to ",Object(o.b)("inlineCode",{parentName:"li"},"33133")," (default), or a port of your choice. If you do not select ",Object(o.b)("inlineCode",{parentName:"li"},"33133"),", be sure to note this down for the subsequent whitelisting step.",Object(o.b)("div",Object(n.a)({parentName:"li"},{className:"admonition admonition-caution alert alert--warning"}),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"Important notice ")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"If you have used a port other than 33133, and have opted for IP-based whitelisting, please notify us immediately so that we can adjust our whitelisted port for you.")))),Object(o.b)("li",{parentName:"ul"},"Change the value of ",Object(o.b)("inlineCode",{parentName:"li"},"ENABLE_WEBSOCKET")," to ",Object(o.b)("inlineCode",{parentName:"li"},"true")," if your seed node will support WebSockets (refer to the ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"../../../dev/dev-tools-websockets"}),"Zilliqa Websocket Server")," documentation).")),Object(o.b)("p",null,"Finally, launch the seed node:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ ./launch.sh\n")),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"A seed node needs a key pair to communicate with other nodes in the network. launch.sh will automatically generate and use a key pair stored in the file mykey.txt in the same folder"))),Object(o.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"We highly recommend to use another keypair for depositing stake, withdrawing stake and withdrawing reward."))))),Object(o.b)("h3",{id:"configuring-domain-name"},"Configuring Domain Name"),Object(o.b)("p",null,"Once your seed node is fully set up, it is time to configure your domain name to point to the address of your seed node. "),Object(o.b)("p",null,"If your seed node is not behind a load balancer, you can set an ",Object(o.b)("inlineCode",{parentName:"p"},"A record")," in your domain registrar to point your domain/subdomain to your seed node\u2019s IP address."),Object(o.b)("p",null,"If your seed node is behind a load balancer, you can set a ",Object(o.b)("inlineCode",{parentName:"p"},"CNAME record")," in your domain registrar to point your domain/subdomain to the hostname of your load balancer."),Object(o.b)("h3",{id:"ssltls-configuration"},"SSL/TLS Configuration"),Object(o.b)("p",null,"As the staked seed nodes are for public consumption, we expect these nodes to have high availability and be secure and reliable. As such, all operators are required to support serving of API and raw data requests over SSL/TLS."),Object(o.b)("h2",{id:"whitelisting-and-api-servicing"},"Whitelisting and API Servicing"),Object(o.b)("p",null,"It is necessary for the staked seed node to be whitelisted by Zilliqa in phase 1 in order to receive data broadcasts about the blockchain and its state.\nCurrently, there are 2 forms of whitelisting supported:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Whitelisting via a static IP"),Object(o.b)("li",{parentName:"ol"},"Whitelisting via public key of the SSN")),Object(o.b)("p",null,"We recommend SSN operators to use the whitelisting by public key approach."),Object(o.b)("h3",{id:"testing-your-ssns-json-rpc-port"},"Testing Your SSN's JSON-RPC Port"),Object(o.b)("p",null,"To check whether your node's JSON-RPC server is publicly available, you can use the following curl command."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'curl -d \'{\n    "id": "1",\n    "jsonrpc": "2.0",\n    "method": "GetBlockchainInfo",\n    "params": [""]\n}\' -H "Content-Type: application/json" -X POST "<staked seed node address>"\n')),Object(o.b)("p",null,"If you received the latest blockchain information (similar to the one below) from the staked seed node, your JSON-RPC service is running well."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'{"id":"1","jsonrpc":"2.0","result":{"CurrentDSEpoch":"4789","CurrentMiniEpoch":"478809","DSBlockRate":0.00013455546527607284,"NumDSBlocks":"4790","NumPeers":2400,"NumTransactions":"3091806","NumTxBlocks":"478809","NumTxnsDSEpoch":"185","NumTxnsTxEpoch":"0","ShardingStructure":{"NumPeers":[600,600,600]},"TransactionRate":0,"TxBlockRate":0.013450003515398927}}\n')),Object(o.b)("h3",{id:"testing-your-ssns-websocket-port"},"Testing Your SSN's WebSocket Port"),Object(o.b)("p",null,"You can use an online WebSocket test utility to test whether your WebSocket is publicly accessible."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Visit ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.websocket.org/echo.html"}),"https://www.websocket.org/echo.html")),Object(o.b)("li",{parentName:"ol"},"Under location, put your WebSocket URL link (e.g., ",Object(o.b)("inlineCode",{parentName:"li"},"wss://<yourdomain here or ip:port>"),")"),Object(o.b)("li",{parentName:"ol"},"Click on connect"),Object(o.b)("li",{parentName:"ol"},"If ",Object(o.b)("strong",{parentName:"li"},"\u201cCONNECTED\u201d")," is shown in the log, your WebSocket port is publicly accessible")),Object(o.b)("h2",{id:"advanced-setup"},"Advanced Setup"),Object(o.b)("p",null,"Different node operators may wish to have a different setup to secure their SSN. It is possible as long as:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"JSON-RPC port (by default 4201) and WebSocket port are accessible by anyone without any restriction"),Object(o.b)("li",{parentName:"ol"},"Staking API port (by default 4501) is accessible by the verifier to check the SSN")),Object(o.b)("p",null,"SSN operators are allowed to:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Change the default port numbers (please inform us)"),Object(o.b)("li",{parentName:"ul"},"Add a load balancer in front of their node"),Object(o.b)("li",{parentName:"ul"},"Add additional services such as Cloudflare proxy in front of the node"),Object(o.b)("li",{parentName:"ul"},"Run more than 1 SSN node behind a load balancer (these will collectively be treated as a single SSN)")),Object(o.b)("p",null,"SSN operators are not allowed to:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Outsource API service to other node operators or Zilliqa seed nodes"),Object(o.b)("li",{parentName:"ul"},"Restrict or censor any API service to the public or any region")))}u.isMDXComponent=!0},259:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return m}));var n=a(0),i=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=i.a.createContext({}),b=function(e){var t=i.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},d=function(e){var t=b(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},p=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,r=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=b(a),p=n,m=d["".concat(r,".").concat(p)]||d[p]||u[p]||o;return a?i.a.createElement(m,c(c({ref:t},s),{},{components:a})):i.a.createElement(m,c({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,r=new Array(o);r[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,r[1]=c;for(var s=2;s<o;s++)r[s]=a[s];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"},260:function(e,t,a){"use strict";function n(e){var t,a,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(i&&(i+=" "),i+=a);else for(t in e)e[t]&&(i&&(i+=" "),i+=t);return i}t.a=function(){for(var e,t,a=0,i="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(i&&(i+=" "),i+=t);return i}},261:function(e,t,a){"use strict";var n=a(0);const i=Object(n.createContext)({tabGroupChoices:{},setTabGroupChoices:()=>{},isAnnouncementBarClosed:!1,closeAnnouncementBar:()=>{}});t.a=i},262:function(e,t,a){"use strict";var n=a(0),i=a(261);t.a=function(){return Object(n.useContext)(i.a)}},263:function(e,t,a){"use strict";var n=a(0),i=a.n(n),o=a(262),r=a(260),c=a(92),l=a.n(c);const s=37,b=39;t.a=function(e){const{block:t,children:a,defaultValue:c,values:d,groupId:u}=e,{tabGroupChoices:p,setTabGroupChoices:m}=Object(o.a)(),[h,O]=Object(n.useState)(c);if(null!=u){const e=p[u];null!=e&&e!==h&&d.some(t=>t.value===e)&&O(e)}const j=e=>{O(e),null!=u&&m(u,e)},g=[];return i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(r.a)("tabs",{"tabs--block":t})},d.map(({value:e,label:t})=>i.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":h===e,className:Object(r.a)("tabs__item",l.a.tabItem,{"tabs__item--active":h===e}),key:e,ref:e=>g.push(e),onKeyDown:e=>((e,t,a)=>{switch(a.keyCode){case b:((e,t)=>{const a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()})(e,t);break;case s:((e,t)=>{const a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()})(e,t)}})(g,e.target,e),onFocus:()=>j(e),onClick:()=>j(e)},t))),i.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter(e=>e.props.value===h)[0]))}},264:function(e,t,a){"use strict";var n=a(0),i=a.n(n);t.a=function(e){return i.a.createElement("div",null,e.children)}}}]);